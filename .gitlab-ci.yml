stages:
  - test
  - version
  - release

variables:
  BASE_URL: "https://api.meteo.cat"
  PYPI_USERNAME: $PRODUCTION_USERNAME  # Usuario de PyPI
  PYPI_PASSWORD: $PRODUCTION_PASSWORD  # Token de PyPI
  GL_TOKEN: $GL_TOKEN  # Token de GitLab
  GH_TOKEN: $GH_TOKEN  # Token de GitHub
  GIT_STRATEGY: fetch
  GIT_DEPTH: 0

default:
  image: python:3.12.7
  before_script:
    - python -V  # Verificar versión de Python
    - python -m pip install --upgrade pip
    - pip install poetry  # Instalar Poetry
    - poetry config virtualenvs.create false  # Desactivar la creación de entornos virtuales
    - poetry install  # Instalar dependencias con Poetry

test_job:
  stage: test
  script:
    - python meteocat/locations.py  # Ejecuta tu script principal
  artifacts:
    paths:
      - municipis_result.json  # Archivo que queremos guardar
    expire_in: never  # No expira. El archivo generado estará siempre disponible
  only:
    - master

version_job:
  stage: version
  script:
    - git fetch --tags  # Asegurarse de obtener todas las etiquetas
    - git checkout master  # Cambiar explícitamente a la rama master
    - |
      VERSION=$(poetry run semantic-release version --no-push | grep -oP '(?<=The next version is: )\S+')
      echo $VERSION > release_version.txt
  artifacts:
    paths:
      - release_version.txt  # Incluye el archivo como artefacto
    expire_in: never  # Opcional: Expira en 1 semana
  only:
    - master

gitlab_job:
  stage: release
  dependencies:
    - version_job
  script:
    - python gitlab_release.py
  only:
    - master
