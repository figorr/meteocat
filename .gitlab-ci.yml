stages:
  - test
  - release
  - deploy

variables:
  BASE_URL: "https://api.meteo.cat"

before_script:
  - python -V  # Verificar versión de Python
  - python -m pip install --upgrade pip
  - pip install poetry  # Instalar Poetry
  - poetry config virtualenvs.create false  # Desactivar la creación de entornos virtuales
  - poetry install  # Instalar dependencias con Poetry

test_job:
  stage: test
  image: python:3.12.7  # Actualización a Python 3.12.7
  script:
    - poetry install  # Instalar dependencias con Poetry
    - python meteocat/locations.py  # Ejecuta tu script principal
  artifacts:
    paths:
      - municipis_result.json  # Archivo que queremos guardar
    expire_in: never  # No expira. El archivo generado estará siempre disponible
  only:
    - master

release_job:
  stage: release
  image: python:3.12-slim  # Imagen que ya tiene Python 3.12
  script:
    - apt-get update && apt-get install -y python3-pip curl gnupg  # Instalar dependencias
    - curl -sL https://deb.nodesource.com/setup_20.x | bash -  # Instalar Node.js
    - apt-get install -y nodejs  # Instalar Node.js
    - npm install -g semantic-release  # Instalar Semantic Release
    - semantic-release  # Ejecutar Semantic Release
  only:
    - master  # Solo en la rama master


deploy_job:
  stage: deploy
  image: python:3.12.7  # Actualización a Python 3.12.7
  script:
    - echo "Desplegando la aplicación..."
    - python deploy.py  # Reemplaza con tu lógica de despliegue
  only:
    - tags
