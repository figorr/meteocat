stages:
  - test
  - release
  - deploy

variables:
  BASE_URL: "https://api.meteo.cat"

before_script:
  - python -V  # Verificar versión de Python
  - python -m pip install --upgrade pip
  - pip install poetry  # Instalar Poetry
  - poetry config virtualenvs.create false  # Desactivar la creación de entornos virtuales
  - poetry install  # Instalar dependencias con Poetry

test_job:
  stage: test
  image: python:3.12.7  # Actualización a Python 3.12.7
  script:
    - poetry install  # Instalar dependencias con Poetry
    - python meteocat/locations.py  # Ejecuta tu script principal
  artifacts:
    paths:
      - municipis_result.json  # Archivo que queremos guardar
    expire_in: never  # No expira. El archivo generado estará siempre disponible
  only:
    - master

bump_and_publish:
  stage: release
  image: python:3.12.7  # Actualización a Python 3.12.7
  variables:
    PYPI_USERNAME: $PRODUCTION_USERNAME
    PYPI_PASSWORD: $PRODUCTION_PASSWORD
    GL_TOKEN: $GL_TOKEN
  script:
    - git config --global user.name "semantic-release (via GitLabCI)"
    - git config --global user.email "semantic-release@GitLabCI"
    - pip install python-semantic-release==7.34.6
    - python-semantic-release publish
    - poetry config http-basic.pypi $PYPI_USERNAME $PYPI_PASSWORD
    - poetry publish --build
  artifacts:
    paths:
      - dist
  only:
    - master

deploy_job:
  stage: deploy
  image: python:3.12.7  # Actualización a Python 3.12.7
  script:
    - echo "Desplegando la aplicación..."
    - python deploy.py  # Reemplaza con tu lógica de despliegue
  only:
    - tags
